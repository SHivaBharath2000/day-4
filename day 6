1)The class Movie is stated below. An instance of class Movie represents a film. This class has the following three properties:

title, which is a String representing the title of the movie
studio, which is a String representing the studio that made the movie
rating, which is a String representing the rating of the movie (i.e. PG­13, R, etc)
a) Write a constructor for the class Movie, which takes a String representing the title of the movie, a String representing the studio, and a String representing the rating as its arguments, and sets the respective class properties to these values.

b) The constructor for the class Movie will set the class property rating to "PG" as default when no rating is provided.

c) Write a method getPG, which takes an array of base type Movie as its argument, and returns a new array of only those movies in the input array with a rating of "PG". You may assume the input array is full of Movie instances. The returned array need not be full.

d) Write a piece of code that creates an instance of the class Movie with the title “Casino Royale”, the studio “Eon Productions”, and the rating “PG­13”

ans:
class movie {
    constructor(title, studio, rating) {
        this.title = title;
        this.studio = studio;
        this.rating = rating;
    }

    getPg() {
        var pg = [];
        pg.push(this.title, this.studio, this.rating);
        return pg;
    }
}

const myMovie = new movie("casiono","eon productions","PG13")

o/p[ 'casiono', 'eon productions', 'PG13' ]
console.log(myMovie.getPg())

2)Convert the UML diagram to Typescript class. - use number for double
class circle {
    constructor(radius,circum,area) {
        this.radius = radius;
        this.circum = circum;
        this.area = area;
    }

    getRadius() {
        const radi=this.circum/2*Math.PI
        console.log(radi)
    }
    getArea() {
        let area1=Math. PI*this.radius*this.radius
        console.log(area1)
    }
    getCircumference() {
       var circum=2*Math.PI*this.radius
       console.log(circum)
    }
}

const newCircle = new circle(23,33,34)
console.log(newCircle.getRadius())
console.log(newCircle.getArea())
console.log(newCircle.getCircumference())

o/p
51.83627878423159
1661.9025137490005
144.51326206513048
3)person class hold all details
class Person {
    constructor(name, age, gender, designation) {
        this.name = name;
        this.age = age;
        this.gender = gender;
        this.designation = designation;
    }
}
const person1 = new Person("Alice", 30, "Female", "Software Engineer");
const person2 = new Person("Bob", 25, "Male", "Data Analyst");
